<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="30 seconds">

	<!-- <property name="RUN_MODE" value="SERVICE"/> -->
	<property name="RUN_MODE" value="DEBUG" />

	<if condition='property("RUN_MODE").equals("SERVICE")'>
		<then>
			<property name="LOG_DIR" value="./logs" />
		</then>
		<else>
			<property name="LOG_DIR" value="./logs" />
		</else>
	</if>

	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- Log message format -->
		<encoder>
			<pattern>
				%d{HH:mm:ss.SSS} [%thread] %-5level (%file:%line\) %logger{32}.%method -%n \t%msg%n
			</pattern>
		</encoder>
	</appender>


	<appender name="system_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_DIR}/jincheon-system.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 파일이 하루에 한개씩 생성된다 -->
			<fileNamePattern>${LOG_DIR}/jincheon-system.%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- maxHIstory 설정은 위 부분에 롤링 정책에 따라 적용되 된다고 보면된다. 위 설정데로 라면 30일이 지난 파일은 
				삭제가 된다. -->
			<maxHistory>60</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10mb</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>
				%d{HH:mm:ss.SSS} [%thread] %-5level (%file:%line\) %logger{32}.%method -%n \t%msg%n
			</pattern>
		</encoder>
	</appender>


	<appender name="cms_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_DIR}/jincheon-cms.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 파일이 하루에 한개씩 생성된다 -->
			<fileNamePattern>
				${LOG_DIR}/jincheon-cms.%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- maxHIstory 설정은 위 부분에 롤링 정책에 따라 적용되 된다고 보면된다. 위 설정데로 라면 30일이 지난 파일은 
				삭제가 된다. -->
			<maxHistory>60</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10mb</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>
				%d{HH:mm:ss.SSS} [%thread] %-5level (%file:%line\) %logger{32}.%method -%n \t%msg%n
			</pattern>
		</encoder>
	</appender>

	<if condition='property("RUN_MODE").equals("SERVICE")'>
		<then>
			<logger name="org.springframework" level="info" />
			<logger name="org.hibernate" level="info" />
			<logger name="com.bluecapsystem.cms" level="info" />

			<logger name="org.springframework" level="INFO" additivity="false">
				<appender-ref ref="system_file" />
			</logger>
			<logger name="org.hibernate" level="INFO" additivity="false">
				<appender-ref ref="system_file" />
			</logger>
			<logger name="com.bluecapsystem.cms" level="debug" additivity="false">
				<appender-ref ref="cms_file" />
			</logger>
			<root level="info">
				<appender-ref ref="console" />
			</root>
		</then>
		<!-- 설정파일에 RUN_MODE 가 SERVICE로 정의되어 있지 않으면 로깅 레벨을 DEBUG 지정 -->
		<else>
			<logger name="org.springframework" level="info" />
			<logger name="org.hibernate" level="info" />
			<logger name="com.bluecapsystem.cms" level="debug" />
			<root level="debug">
				<appender-ref ref="console" />
			</root>
		</else>
	</if>

</configuration>